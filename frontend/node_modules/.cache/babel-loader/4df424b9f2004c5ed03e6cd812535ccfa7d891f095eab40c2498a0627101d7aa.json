{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Personal\\\\ABC Comics\\\\frontend\\\\comicvine\\\\src\\\\components\\\\listItems.js\";\nimport React from 'react';\nimport Item from './card';\nimport { Result } from '../interfaces/results';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemList({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-center\",\n      children: data.items.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n        data: item,\n        index: index,\n        card: data.card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemList;\nItemList.propTypes = {\n  data: PropTypes.arrayOf(Result).isRequired // Espera un array de objetos con la forma definida por ResultPropTypes\n};\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","Item","Result","PropTypes","jsxDEV","_jsxDEV","ItemList","data","className","children","items","map","item","index","card","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","isRequired","$RefreshReg$"],"sources":["C:/Projects/Personal/ABC Comics/frontend/comicvine/src/components/listItems.js"],"sourcesContent":["import React from 'react';\r\nimport Item from './card';\r\nimport { Result } from '../interfaces/results';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ItemList({ data }) {\r\n\r\n  return (\r\n    <div className=\"container text-center justify-content-center\" >  \r\n      <div className=\"row align-items-center\">\r\n        {data.items.map((item, index) => (\r\n          <Item data={item} index={index} card={data.card}></Item>\r\n        ))}\r\n\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n\r\n}\r\nItemList.propTypes = {\r\n  data: PropTypes.arrayOf(Result).isRequired // Espera un array de objetos con la forma definida por ResultPropTypes\r\n};\r\n\r\nexport default ItemList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAE1B,oBACEF,OAAA;IAAKG,SAAS,EAAC,8CAA8C;IAAAC,QAAA,eAC3DJ,OAAA;MAAKG,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCF,IAAI,CAACG,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BR,OAAA,CAACJ,IAAI;QAACM,IAAI,EAAEK,IAAK;QAACC,KAAK,EAAEA,KAAM;QAACC,IAAI,EAAEP,IAAI,CAACO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAIV;AAACC,EAAA,GAdQb,QAAQ;AAejBA,QAAQ,CAACc,SAAS,GAAG;EACnBb,IAAI,EAAEJ,SAAS,CAACkB,OAAO,CAACnB,MAAM,CAAC,CAACoB,UAAU,CAAC;AAC7C,CAAC;AAED,eAAehB,QAAQ;AAAC,IAAAa,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
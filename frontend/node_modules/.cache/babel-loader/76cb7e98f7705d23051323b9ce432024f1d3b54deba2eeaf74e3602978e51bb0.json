{"ast":null,"code":"import React, { useEffect, useState, useMemo } from 'react';\nexport default function getIssues({\n  page = 0\n} = {}) {\n  const apiUrl = `http://localhost:3000/issues?page=${page}`;\n  return fetchData = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error('Error al obtener los datos del servidor');\n      }\n      const data = await response.json();\n      console.log(data.results);\n      return data.results;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}","map":{"version":3,"names":["React","useEffect","useState","useMemo","getIssues","page","apiUrl","fetchData","response","fetch","ok","Error","data","json","console","log","results","error"],"sources":["C:/Projects/Personal/ABC Comics/frontend/comicvine/src/services/issuesService.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\n\r\nexport default function getIssues({page=0}={}){\r\n    const apiUrl = `http://localhost:3000/issues?page=${page}`;\r\n\r\n    return fetchData = async () => {\r\n        try {\r\n          const response = await fetch(apiUrl);\r\n          if (!response.ok) {\r\n            throw new Error('Error al obtener los datos del servidor');\r\n          }\r\n          const data = await response.json();\r\n          console.log(data.results);\r\n          return data.results;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n      };\r\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAE3D,eAAe,SAASC,SAASA,CAAC;EAACC,IAAI,GAAC;AAAC,CAAC,GAAC,CAAC,CAAC,EAAC;EAC1C,MAAMC,MAAM,GAAI,qCAAoCD,IAAK,EAAC;EAE1D,OAAOE,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,MAAM,CAAC;MACpC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;MAC5D;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;MACzB,OAAOJ,IAAI,CAACI,OAAO;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACxB;EACF,CAAC;AACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}